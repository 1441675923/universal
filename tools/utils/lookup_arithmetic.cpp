// lookup_arithmetic.cpp: generate tables for small posit lookup arithmetic
//
// Copyright (C) 2017-2018 Stillwater Supercomputing, Inc.
//
// This file is part of the universal numbers project, which is released under an MIT Open Source license.

#include "common.hpp"

#include <posit>

// generate a look-up table for addition
template<size_t nbits, size_t es>
void GenerateAddLookupTable() {
	constexpr size_t nr_of_posits = (1 << nbits);
	sw::unum::posit<nbits, es> pa, pb, padd;
	unsigned long long mask = nr_of_posits - 1;
	unsigned long long base;
	for (size_t i = 0; i < nr_of_posits; i++) {
		pa.set_raw_bits(i);
		for (size_t j = 0; j < nr_of_posits; j++) {
			pb.set_raw_bits(j);
			padd = pa + pb;
			base = pa.get().to_ullong() << nbits | pb.get().to_ullong();
			//std::cout << std::hex << base << " " << padd.get() << std::endl;
			std::cout << padd.get().to_ulong() << ",";
		}
		std::cout << std::endl;
	}
}

namespace sw {
	namespace spec {
		class posit_5_0 {
		public:
			posit_5_0() {

			}
			posit_5_0& operator+=(const posit_5_0& b) {
				return *this;
			}
		private:
			unsigned long lookup[1024] = {
				0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,
				1,2,3,4,5,6,7,8,8,10,10,12,12,13,14,15,16,17,18,19,20,22,22,24,25,26,27,28,29,30,31,0,
				2,3,4,5,6,7,8,8,9,10,11,12,12,13,14,15,16,17,18,19,21,22,23,24,26,27,28,29,30,31,0,1,
				3,4,5,6,7,8,8,9,10,10,12,12,12,13,14,15,16,17,18,19,22,22,24,25,27,28,29,30,31,0,1,2,
				4,5,6,7,8,8,9,10,10,11,12,12,12,14,14,15,16,17,18,20,22,23,24,26,28,29,30,31,0,1,2,3,
				5,6,7,8,8,9,10,10,10,12,12,12,13,14,14,15,16,17,19,20,22,24,25,27,29,30,31,0,1,2,3,4,
				6,7,8,8,9,10,10,10,11,12,12,12,13,14,14,15,16,17,19,20,23,24,26,28,30,31,0,1,2,3,4,5,
				7,8,8,9,10,10,10,11,12,12,12,13,13,14,14,15,16,17,19,20,24,25,27,29,31,0,1,2,3,4,5,6,
				8,8,9,10,10,10,11,12,12,12,12,13,13,14,14,15,16,17,19,20,24,26,28,30,0,1,2,3,4,5,6,7,
				9,10,10,10,11,12,12,12,12,12,13,13,13,14,14,15,16,17,19,21,26,28,30,0,2,3,4,5,6,7,8,8,
				10,10,11,12,12,12,12,12,12,13,13,13,14,14,14,15,16,17,20,22,28,30,0,2,4,5,6,7,8,8,9,10,
				11,12,12,12,12,12,12,13,13,13,13,14,14,14,14,15,16,17,20,23,30,0,2,4,6,7,8,8,9,10,10,10,
				12,12,12,12,12,13,13,13,13,13,14,14,14,14,14,15,16,18,20,24,0,2,4,6,8,8,9,10,10,10,11,12,
				13,13,13,13,14,14,14,14,14,14,14,14,14,14,15,15,16,18,24,0,8,9,10,11,12,12,12,12,12,13,13,13,
				14,14,14,14,14,14,14,14,14,14,14,14,14,15,15,15,16,18,0,8,12,12,12,13,13,13,13,13,14,14,14,14,
				15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,16,0,14,14,14,15,15,15,15,15,15,15,15,15,15,15,
				16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,
				17,17,17,17,17,17,17,17,17,17,17,17,18,18,18,0,16,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,
				18,18,18,18,18,19,19,19,19,19,20,20,20,24,0,14,16,17,17,17,18,18,18,18,18,18,18,18,18,18,18,18,
				19,19,19,19,20,20,20,20,20,21,22,23,24,0,8,14,16,17,17,18,18,18,18,18,18,18,18,18,18,19,19,19,
				20,20,21,22,22,22,23,24,24,26,28,30,0,8,12,14,16,17,18,18,18,18,18,19,19,19,19,19,20,20,20,20,
				21,22,22,22,23,24,24,25,26,28,30,0,2,9,12,15,16,17,18,18,18,18,19,19,19,19,20,20,20,20,20,20,
				22,22,23,24,24,25,26,27,28,30,0,2,4,10,12,15,16,17,18,18,18,19,19,19,20,20,20,20,20,20,21,22,
				23,24,24,25,26,27,28,29,30,0,2,4,6,11,13,15,16,17,18,18,19,19,19,20,20,20,20,20,21,22,22,22,
				24,25,26,27,28,29,30,31,0,2,4,6,8,12,13,15,16,17,18,18,19,19,20,20,20,20,21,22,22,22,23,24,
				25,26,27,28,29,30,31,0,1,3,5,7,8,12,13,15,16,17,18,18,19,19,20,20,20,21,22,22,22,23,24,24,
				26,27,28,29,30,31,0,1,2,4,6,8,9,12,13,15,16,17,18,18,19,20,20,20,21,22,22,22,23,24,24,25,
				27,28,29,30,31,0,1,2,3,5,7,8,10,12,13,15,16,17,18,18,19,20,20,20,22,22,22,23,24,24,25,26,
				28,29,30,31,0,1,2,3,4,6,8,9,10,12,14,15,16,17,18,18,20,20,20,21,22,22,23,24,24,25,26,27,
				29,30,31,0,1,2,3,4,5,7,8,10,10,13,14,15,16,17,18,19,20,20,20,22,22,23,24,24,25,26,27,28,
				30,31,0,1,2,3,4,5,6,8,9,10,11,13,14,15,16,17,18,19,20,20,21,22,23,24,24,25,26,27,28,29,
				31,0,1,2,3,4,5,6,7,8,10,10,12,13,14,15,16,17,18,19,20,20,22,22,24,24,25,26,27,28,29,30,
			};
		};
	}
}


// receive a float and print the components of a double representation
int main(int argc, char** argv)
try {
	using namespace std;
	using namespace sw::unum;

	GenerateAddLookupTable<5, 0>();

	return EXIT_SUCCESS;
}
catch (const char* const msg) {
	std::cerr << msg << std::endl;
	return EXIT_FAILURE;
}
catch (...) {
	std::cerr << "caught unknown exception" << std::endl;
	return EXIT_FAILURE;
}
